security:
    encoders:
        App\Entity\JdUsers:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_USER:          ROLE_USER
        ROLE_AUTHOR:        ROLE_AUTHOR
        ROLE_NATURALIST:    [ROLE_USER, ROLE_AUTHOR, ROLE_NATURALIST]
        ROLE_SUPER_ADMIN:   [ROLE_USER, ROLE_AUTHOR, ROLE_NATURALIST, ROLE_ALLOWED_TO_SWITCH]
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        jd_database_nao:
            entity:
                class: App\Entity\JdUsers
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: jd_database_nao

            form_login:
                login_path: loginUsers
                check_path: loginUsers

            logout:
                path: usersLogout
                target: home
            access_denied_handler: App\LwServices\AccessDeniedHandler
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/nao/, roles: ROLE_AUTHOR  }
        - { path: ^/author/nao, roles: ROLE_AUTHOR }
        - { path: ^/naturalist/nao, roles: ROLE_NATURALIST }